{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Moive","year","title","summary","poster","genres","className","src","alt","map","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qRAgCeA,MAzBf,YAAmD,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACtC,OACA,sBAAKC,UAAY,QAAjB,UACI,qBAAKC,IAAKH,EAAQI,IAAON,EAAOA,MAAQA,IAC5C,sBAAKI,UAAY,aAAjB,UACI,oBAAIA,UAAW,eAAf,SAA+BJ,IAC/B,oBAAII,UAAW,cAAf,SAA8BL,IAC9B,oBAAIK,UAAU,gBAAd,SACCD,EAAOI,KAAI,SAACJ,EAAOK,GAAR,OAAmB,oBAAiBJ,UAAU,gBAA3B,SAA4CD,GAAlCK,QAEzC,oBAAGJ,UAAY,iBAAf,UAAiCH,EAAQQ,MAAM,EAAE,KAAjD,gBCuCOC,G,kNA/CbC,MAAQ,CACNC,WAAY,EACZC,OAAO,I,EAMXC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,8DADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAASD,WAAY,IAF1B,2C,uDAKV,WACAQ,KAAKN,c,oBAKL,WACE,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACA,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAW,eAAjB,0BAGF,qBAAKA,UAAY,SAAjB,SACKS,EAAON,KAAI,SAAAc,GAAK,OACjB,cAAC,EAAD,CAEIC,GAAID,EAAMC,GACVvB,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbC,QAASoB,EAAMpB,QACfC,OAAQmB,EAAME,mBACdpB,OAAUkB,EAAMlB,QANTkB,EAAMC,e,GAhCXE,IAAMC,YCJxBC,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,W","file":"static/js/main.78a0dee4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./movie.css\";\n\n// movie.js에 Movie 함수를 만들고 타이틀을 return 한다.\n// proptypes를 선언하여, Movie 함수안의 각 요소를 number/string 으로 타입을 정의한다.\n/// 타입이 정의된 Movie함수를 App.js로 보낸다.\nfunction Moive({year,title,summary,poster,genres}){\n    return (\n    <div className = \"movie\">        \n        <img src={poster} alt = {title} title ={title}/>\n    <div className = \"movie_data\">\n        <h3 className =\"movie__title\">{title}</h3>\n        <h5 className =\"movie__year\">{year}</h5>\n        <ul className=\"movie__gneres\"> \n        {genres.map((genres,index) => (<li key ={index} className=\"genres__gnere\">{genres}</li>))}\n        </ul>\n        <p className = \"movie__summary\">{summary.slice(0,180)}...</p>\n        </div>\n    </div>\n    );\n}\n\nMoive.propTypes = {\n    id : PropTypes.number.isRequired,\n    year : PropTypes.number.isRequired,\n    title : PropTypes.string.isRequired,\n    summary : PropTypes.string.isRequired,\n    poster : PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Moive; ","// https://yts-proxy.now.sh/list_movies.json\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./movie\";\nimport \"./app.css\";\n\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies:[]\n  };\n\n/// async를 쓰려면, 선언한 함수안에서 await를 선언해야 한다. \n/// axios.get을 통해서 api를 가져온다 .\n\ngetMovies = async() => {\n  const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by = rating\");\n  this.setState({movies , isLoading : false});\n};\n\n  componentDidMount(){\n  this.getMovies();\n  }\n\n  /// render 하는 내용이 web으로 나오고, 자동으로 html이 업데이트 되면서 실행된다 . \n  /// ? -> true // : -> false // => 함수선언\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className =\"loader__text\">Loading...</span>\n        </div>\n      ): (\n        <div className = \"movies\">\n            {movies.map(movie => (\n            <Movie \n                key = {movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image} \n                genres = {movie.genres} />\n      ))}\n        </div>\n      )}      \n    </section>\n  );\n  }\n}\n            \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App /> ,  document.getElementById('root'));\n\n"],"sourceRoot":""}